// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext.kotlin_version = '1.3.11'
  repositories {
    google()
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.3.2'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.1.0-alpha01"
  }
}

allprojects {
  repositories {
    google()
    jcenter()
    maven { url 'https://jitpack.io' }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}


ext {
  //App
  appVersionCode = 1
  appVersionName = "1.0"

  //Android
  androidCompileSDKVersion = 28
  androidMinSDKVersion = 21
  androidTargetSDKVersion = androidCompileSDKVersion

  //Library versions
  constraintLayoutVersion = '1.1.3'
  daggerVersion = '2.21'
  coreKtxVersion = '1.1.0-alpha04'
  appcompatVersion = '1.0.2'
  rxJavaVersion = '2.2.6'
  rxAndroidVersion = '2.1.1'
  materialVersion = '1.0.0'
  retrofitVersion = '2.5.0'
  okHttpVersion = '3.12.0'
  picassoVersion = '2.71828'
  timberVersion = '4.7.1'
  navigationVersion = '2.1.0-alpha01'
  retrofitVersion = '2.5.0'
  moshiVersion = '1.8.0'
  okHttpVersion = '3.14.0'
  retrofitMoshiAdapterVersion = '2.5.0'
  okHttpLoggingVersion = '3.14.0'
  roomVersion = '2.1.0-alpha06'

  //Test library versions
  junitVersion = '4.12'
  testRunnerVersion = '1.1.0-alpha4'
  expressonVersion = '3.1.0-alpha4'

  libs = [
      kotlinStdlib: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
      constraintLayout: "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
      material: "com.google.android.material:material:$materialVersion",

      coreKtx: "androidx.core:core-ktx:$coreKtxVersion",
      appcompat: "androidx.appcompat:appcompat:$appcompatVersion",

      navFragment: "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
      navUi: "androidx.navigation:navigation-ui-ktx:$navigationVersion",

      dagger: "com.google.dagger:dagger:$daggerVersion",
      daggerCompiler: "com.google.dagger:dagger-compiler:$daggerVersion",
      daggerAndroid: "com.google.dagger:dagger-android:$daggerVersion",
      daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",
      daggerSupport: "com.google.dagger:dagger-android-support:$daggerVersion",

      rxJava: "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
      rxAndroid: "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",

      picasso: "com.squareup.picasso:picasso:$picassoVersion",

      timber: "com.jakewharton.timber:timber:$timberVersion",

      retrofit: "com.squareup.retrofit2:retrofit:$retrofitVersion",
      retrofitRxAdapter : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
      retrofitMoshiAdapter : "com.squareup.retrofit2:converter-moshi:$retrofitMoshiAdapterVersion",
      okHttp :  "com.squareup.okhttp3:okhttp:$okHttpVersion",
      okHttpLogging :  "com.squareup.okhttp3:logging-interceptor:$okHttpLoggingVersion",
      moshi : "com.squareup.moshi:moshi-kotlin:$moshiVersion",
      moshiCodegen : "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion",

      room: "androidx.room:room-runtime:$roomVersion",
      roomProcessor: "androidx.room:room-compiler:$roomVersion",
      roomRxJava: "androidx.room:room-rxjava2:$roomVersion"
  ]

  testLibs = [
      junit: "junit:junit:$junitVersion",
      testRunner: "androidx.test:runner:$testRunnerVersion",
      expresso: "androidx.test.espresso:espresso-core:$expressonVersion"
  ]
}