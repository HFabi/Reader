{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "5ac8427ce9217d26c7ea8774c75eff9c",
    "entities": [
      {
        "tableName": "articles",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `domain` TEXT NOT NULL, `url` TEXT NOT NULL, `title` TEXT NOT NULL, `author` TEXT NOT NULL, `datePublished` INTEGER, `leadImagePath` TEXT NOT NULL, `excerpt` TEXT NOT NULL, `content` TEXT NOT NULL, `localPath` TEXT NOT NULL, `nextPageUrl` TEXT NOT NULL, `addedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "domain",
            "columnName": "domain",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "datePublished",
            "columnName": "datePublished",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "leadImagePath",
            "columnName": "leadImagePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "excerpt",
            "columnName": "excerpt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localPath",
            "columnName": "localPath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nextPageUrl",
            "columnName": "nextPageUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addedAt",
            "columnName": "addedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "articles_categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`articleId` INTEGER NOT NULL, `categoryId` INTEGER NOT NULL, PRIMARY KEY(`articleId`, `categoryId`), FOREIGN KEY(`articleId`) REFERENCES `articles`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`categoryId`) REFERENCES `categories`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "articleId",
            "columnName": "articleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "articleId",
            "categoryId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_articles_categories_categoryId",
            "unique": false,
            "columnNames": [
              "categoryId"
            ],
            "createSql": "CREATE  INDEX `index_articles_categories_categoryId` ON `${TABLE_NAME}` (`categoryId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "articles",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "articleId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "categories",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "articles",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_articles_fts_BEFORE_UPDATE BEFORE UPDATE ON `articles` BEGIN DELETE FROM `articles_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_articles_fts_BEFORE_DELETE BEFORE DELETE ON `articles` BEGIN DELETE FROM `articles_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_articles_fts_AFTER_UPDATE AFTER UPDATE ON `articles` BEGIN INSERT INTO `articles_fts`(`docid`, `title`, `author`) VALUES (NEW.`rowid`, NEW.`title`, NEW.`author`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_articles_fts_AFTER_INSERT AFTER INSERT ON `articles` BEGIN INSERT INTO `articles_fts`(`docid`, `title`, `author`) VALUES (NEW.`rowid`, NEW.`title`, NEW.`author`); END"
        ],
        "tableName": "articles_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`title` TEXT NOT NULL, `author` TEXT NOT NULL, content=`articles`)",
        "fields": [
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"5ac8427ce9217d26c7ea8774c75eff9c\")"
    ]
  }
}